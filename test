#!/usr/bin/env bash

set -e

SOURCE=${BASH_SOURCE[0]}
while [ -L "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
  DIR=$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )
  SOURCE=$(readlink "$SOURCE")
  [[ $SOURCE != /* ]] && SOURCE=$DIR/$SOURCE # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
DIR=$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )

# while getopts ":c:" o; do
#     case "${o}" in
#         c)
#             coverage=${OPTARG}
#             ;;
#     esac
# done

# shift $((OPTIND -1))
PATHH=src/${1:-'./'}

# if [ -z "$coverage" ]; then
# 	coverage='100'
# fi

echo "require('ts-node').register({compiler: 'ttypescript'})" > $DIR/run-test-r.js

trap "rm $DIR/run-test-r.js" EXIT

cd $PATHH

# echo '{"exclude": ["**/run-test-r.js", "**/*test.ts"], "temp-dir": "/tmp/nyc-report", "check-coverage": true, "branches": '$coverage', "lines": '$coverage', "functions": '$coverage', "statements": '$coverage'}' > /tmp/nyc.json
echo '{"reporter": ["json-summary", "text"], "exclude": ["**/run-test-r.js", "**/*test.ts"], "temp-dir": "/tmp/nyc-tmp", "check-coverage": false, "report-dir": "/tmp/nyc-report"}' > /tmp/nyc.json

npx nyc --nycrc-path /tmp/nyc.json mocha -r $DIR/run-test-r.js '**/*test.ts' --ignore 'node_modules/**'
